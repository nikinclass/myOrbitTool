volumes:
  pgdatasource:
  api_node_modules:
  ui_node_modules:

services:
  db:
    image: postgres:17-alpine
    container_name: myOrbitTool-db
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdatasource:/var/lib/postgresql/data

  api:
    build:
      context: ./api
      target: dev
    container_name: myOrbitTool-api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - NODE_ENV=development
    volumes:
      - ./api:/app
      - api_node_modules:/app/node_modules

  ui:
    build:
      context: ./ui
      target: dev
    tty: true
    container_name: myOrbitTool-ui
    depends_on:
      - api
    ports:
      - "3000:3000"
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./ui:/app
      - ui_node_modules:/app/node_modules

networks:
  app-network:
    driver: bridge
